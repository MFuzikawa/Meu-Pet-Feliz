openapi: 3.0.0
info:
  title: API - Meu Pet Feliz
  version: 1.0.0
  description: API para gerenciamento de clientes, serviços e agendamentos
servers:
  - url: http://localhost:3000

tags:
  - name: Clientes
    description: Operações relacionadas a clientes
  - name: Serviços
    description: Operações relacionadas a serviços
  - name: Agendamentos
    description: Operações relacionadas a agendamentos

components:
  schemas:
    Cliente:
      type: object
      properties:
        id:
          type: string
          example: "1"
        nome:
          type: string
          example: "Murilo Fuzikawa"
        email:
          type: string
          example: "murilo@email.com"
        numero:
          type: string
          example: "11999999999"
        senha:
          type: string
          example: "senha123"
        role: 
          type: clienteRole
          example: "CLIENTE"
    ClienteInput:
      type: object
      properties:
        nome:
          type: string
          example: "Murilo Fuzikawa"
        email:
          type: string
          example: "murilo@email.com"
        numero:
          type: string
          example: "11999999999"
        senha: 
          type: string
          example: "senha123"
        role: 
          type: clienteRole
          example: "CLIENTE"
      required:
        - nome
        - email
        - numero
        - senha
        - role

    Servico:
      type: object
      properties:
        id:
          type: string
          example: "1"
        nome:
          type: string
          example: "Corte de cabelo"
        preco:
          type: number
          example: 49.90
        descricao:
          type: string
          example: "Corte completo"
        destaque:
          type: boolean
          example: true
        duracaoEmMinutos:
          type: number
          example: 30
    ServicoInput:
      type: object
      properties:
        nome:
          type: string
          example: "Corte de cabelo"
        preco:
          type: number
          example: 49.90
        descricao:
          type: string
          example: "Corte completo"
        destaque:
          type: boolean
          example: true
        duracaoEmMinutos:
          type: number
          example: 30
      required:
        - nome
        - preco

    Agendamento:
      type: object
      properties:
        id:
          type: string
          example: "1"
        clienteId:
          type: string
          example: "1"
        servicoId:
          type: string
          example: "1"
        data:
          type: string
          format: date-time
          example: "2025-09-24T14:00:00Z"
        status:
          type: string
          example: "agendado"
    AgendamentoInput:
      type: object
      properties:
        clienteId:
          type: string
          example: "1"
        servicoId:
          type: string
          example: "1"
        data:
          type: string
          format: date-time
          example: "2025-09-24"
        dataInicio:
          type: string
          example: 2025-09-24T14:00:00Z
      required:
        - clienteId
        - servicoId
        - data
        - dataInicio

paths:
  # ====== SERVIÇOS ======
  /api/clientes:
    get:
      summary: Listar todos os clientes
      tags:
        - Clientes
      responses:
        "200":
          description: Lista de clientes retornada
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Cliente'

    post:
      summary: Criar um cliente
      tags:
        - Clientes
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClienteInput'
      responses:
        "201":
          description: Cliente criado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cliente'

    /api/cliente/auth:
    post:
      summary: Login de Cliente
      tags:
        - Clientes
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  example: cliente@email.com
                senha:
                  type: string
                  format: password
                  example: Senha123
      responses:
        "200":
          description: Login realizado com sucesso
          content:
            application/json:
              schema:
                type: object
                properties:
                  accessToken:
                    type: string
                    example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
                  refreshToken:
                    type: string
                    example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
        "401":
          description: Credenciais inválidas
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Credenciais inválidas
  /api/clientes/{email}:
    get:
      summary: Buscar cliente por email
      tags:
        - Clientes
      
      parameters:
        -in: path
        name: email
        required: true
        schema: 
          type: string
      responses:
        "200":
          description: Cliente encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cliente'
        "404":
          description: Cliente não encontrado

  /api/clientes/{id}:
    get:
      summary: Buscar cliente por ID
      tags:
        - Clientes
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Cliente encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cliente'
        "404":
          description: Cliente não encontrado

  # ====== SERVIÇOS ======
  /api/servicos:
    get:
      summary: Listar todos os serviços
      tags:
        - Serviços
      responses:
        "200":
          description: Lista de serviços
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Servico'

    post:
      summary: Criar um serviço
      tags:
        - Serviços
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServicoInput'
      responses:
        "201":
          description: Serviço criado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Servico'

  /api/servicos/{id}:
    get:
      summary: Buscar serviço por ID
      tags:
        - Serviços
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Serviço encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Servico'
        "404":
          description: Serviço não encontrado
    put:
      summary: Atualizar um serviço
      tags:
        - Serviços
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServicoInput'
      responses:
        "200":
          description: Serviço atualizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Servico'
    delete:
      summary: Excluir um serviço
      tags:
        - Serviços
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Serviço excluído

  # ====== AGENDAMENTOS ======
  /api/agendamentos:
    get:
      summary: Listar todos os agendamentos
      tags:
        - Agendamentos
      responses:
        "200":
          description: Lista de agendamentos
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Agendamento'

    post:
      summary: Criar um agendamento
      tags:
        - Agendamentos
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AgendamentoInput'
      responses:
        "201":
          description: Agendamento criado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Agendamento'

  /api/agendamentos/{id}:
    get:
      summary: Buscar agendamento por ID
      tags:
        - Agendamentos
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Agendamento encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Agendamento'
        "404":
          description: Agendamento não encontrado
    put:
      summary: Atualizar um agendamento
      tags:
        - Agendamentos
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AgendamentoInput'
      responses:
        "200":
          description: Agendamento atualizado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Agendamento'
    delete:
      summary: Excluir um agendamento
      tags:
        - Agendamentos
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "204":
          description: Agendamento excluído
